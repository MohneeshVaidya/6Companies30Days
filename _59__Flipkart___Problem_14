from collections import defaultdict
class Solution:
    def customSortString(self, order: str, s: str) -> str:
        dic = defaultdict(lambda: len(order))

        for i, x in enumerate(order):
            dic[x] = i

        def mergeSort(arr):
            if len(arr) <= 1:
                return arr
            m = (len(arr)-1)//2
            arr1 = mergeSort(arr[:m+1])
            arr2 = mergeSort(arr[m+1:])

            return merge(arr1, arr2)

        def merge(arr1, arr2):
            arr = ''
            i, j = 0, 0
            while i < len(arr1) and j < len(arr2):
                if dic[arr1[i]] <= dic[arr2[j]]:
                    arr += arr1[i]
                    i += 1
                else:
                    arr += arr2[j]
                    j += 1
            if i < len(arr1):
                arr += arr1[i:]
            if j < len(arr2):
                arr += arr2[j:]
            
            return arr
        
        return mergeSort(s)
