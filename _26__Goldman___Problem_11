class Solution:
    def invalidTransactions(self, transactions: List[str]) -> List[str]:
        dic = {}

        for transaction in transactions:
            arr  = transaction.split(',')
            name, time, amount, city = arr[0], int(arr[1]), int(arr[2]), arr[3]

            if time not in dic:
                dic[time] = {name: [city]}
            else:
                if name not in dic[time]:
                    dic[time][name] = [city]
                else:
                    dic[time][name].append(city)
        
        res = []
        for transaction in transactions:
            arr = transaction.split(',')
            name, time, amount, city = arr[0], int(arr[1]), int(arr[2]), arr[3]

            if(amount > 1000):
                res.append(transaction)
                continue
            
            for t in range(time-60, time+61):
                if t not in dic:
                    continue
                elif name not in dic[t]:
                    continue
                elif len(dic[t][name]) > 1 or dic[t][name][0] != city:
                    res.append(transaction)
                    break
        
        return res
