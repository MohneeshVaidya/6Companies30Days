class Solution:
    def closedIsland(self, grid: list[list[int]]) -> int:
        m, n = len(grid), len(grid[0])
        if m == 1 or n == 1:
            return 0

        res = 0
        
        def utility(r, c):
            if r < 0 or r >= m or c < 0 or c >= n:
                return False
            if grid[r][c] == 1 or grid[r][c] == 2:
                return True
            
            grid[r][c] = 2

            t1 = utility(r-1, c)
            t2 = utility(r, c+1)
            t3 = utility(r+1, c)
            t4 = utility(r, c-1)

            return t1 and t2 and t3 and t4
        
        for i in range(1, m-1):
            for j in range(1, n-1):
                if grid[i][j] == 1 or grid[i][j] == 2:
                    continue

                if utility(i, j):
                    res += 1
        
        return res
