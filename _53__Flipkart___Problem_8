class Solution:
    def closestPrimes(self, left: int, right: int) -> List[int]:
        if left == right:
            return [-1, -1]

        def getPrimesUtility():
            n = right
            nums = [False for i in range(n+1)]
            
            i = 2
            while i <= n:
                while i <= n and nums[i]:
                    i += 1
                j = i*i
                while j <= n:
                    nums[j] = True
                    j += i
                i += 1
            res = []
            l = left if left > 1 else 2
            for i in range(l, right+1):
                if not nums[i]: res.append(i)
            return res
        
        primes = getPrimesUtility()
        
        if len(primes) <= 1:
            return [-1, -1]
        
        diff = float("inf")
        num1, num2 = -1, -1
        for i in range(1, len(primes)):
            if diff > primes[i] - primes[i-1]:
                diff = primes[i] - primes[i-1]
                num1, num2 = primes[i-1], primes[i]
        
        return [num1, num2]
