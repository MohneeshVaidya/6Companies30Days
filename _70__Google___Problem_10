import heapq
class Solution:
    def networkDelayTime(self, times: List[List[int]], n: int, k: int) -> int:
        graph = [[-1 for j in range(n+1)] for i in range(n+1)]

        for u, v, w in times:
            graph[u][v] = w
        
        dist = [float("inf") for i in range(n+1)]
        dist[k] = 0
        visited = [False for i in range(n+1)]

        q = [(0, k)]
        while q:
            d, node = heapq.heappop(q)
            if visited[node] or d > dist[node]:
                continue
            visited[node] = True
            for i in range(1, n+1):
                if graph[node][i] == -1:
                    continue
                if dist[i] > d + graph[node][i]:
                    dist[i] = d + graph[node][i]
                    heapq.heappush(q, (dist[i], i))
        
        res = max(dist[1:])
        return res if res != float("inf") else -1
        
